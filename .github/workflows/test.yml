name: Add or Update Multiple Key/Value Pairs in AWS Secrets

on:
  workflow_dispatch:
    inputs:
      key_value_pairs:
        description: 'Enter key-value pairs (format: key1=value1,key2=value2,...)'
        type: string
        required: true

env:
  AWS_REGION: us-east-1
  PRODUCTION_SECRET_KEY: fieldopsgpt-prod  # Secret name for production

jobs:
  aws-secrets-production:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
  
      - name: Setup jq
        uses: dcarbone/install-jq-action@v2
        with:
          version: '1.8'
          force: true
  
      - name: Load Production Secret
        id: get-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: AWS_SECRET,${{ env.PRODUCTION_SECRET_KEY }}
  
      - name: Process and Update Multiple Key-Value Pairs
        shell: bash
        run: |
          jq --version
          echo "INFO: Working with production environment."
          
          # Parse the input to handle multiple key-value pairs
          IFS=',' read -r -a key_value_array <<< "${{ inputs.key_value_pairs }}"
          
          # Initialize the new JSON object
          MERGED_SECRET="$AWS_SECRET"
          
          # Loop through each key-value pair and merge it
          for pair in "${key_value_array[@]}"; do
            KEY=$(echo "$pair" | cut -d '=' -f 1)
            VALUE=$(echo "$pair" | cut -d '=' -f 2)
            NEW_JSON_OBJ="{ \"$KEY\": \"$VALUE\"}"
            MERGED_SECRET=$(echo "$MERGED_SECRET" | jq -s '.[0] * .[1]' <(echo "$MERGED_SECRET") <(echo "$NEW_JSON_OBJ"))
          done

          # Update the secret in AWS Secrets Manager
          echo "INFO: Updating Production Secret"
          aws secretsmanager put-secret-value \
            --secret-id "${SECRET_KEY}" \
            --secret-string "${MERGED_SECRET}"
        env:
          SECRET_KEY: ${{ env.PRODUCTION_SECRET_KEY }}
